<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/USBillboardDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/USBillboardDelegate</TokenIdentifier>
			<Abstract type="html">&lt;USBillboardDelegate&gt; provides ability to control USBillboard presentation and react
to related events.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
            
			
			<NodeRef refid="20"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/presentingViewControllerForBillboard:</TokenIdentifier>
			<Abstract type="html">A delegate method that must be implemented to see contents in the billboard.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (UIViewController *)presentingViewControllerForBillboard:(id&lt;USBillboard&gt;)aBillboard</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard requesting a presentation controller to stick its contents
into view controllers hierarchy. The presenting view controller is expected to be the one
that is currently presented on screen.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/presentingViewControllerForBillboard:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboardWillAppear:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called when the billboard is about to present its contents.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboardWillAppear:(id&lt;USBillboard&gt;)aBillboard</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard that is about to present its contents.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboardWillAppear:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboardDidAppear:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called right after the billboard presents its contents.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboardDidAppear:(id&lt;USBillboard&gt;)aBillboard</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard who&apos;s content was presented.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboardDidAppear:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboardWillDismiss:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called when the billboard is about to dismiss its contents.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboardWillDismiss:(id&lt;USBillboard&gt;)aBillboard</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard that is about to dismiss its contents.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboardWillDismiss:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboardDidDismiss:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called right after the billboard dismisses its contents.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboardDidDismiss:(id&lt;USBillboard&gt;)aBillboard</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard who&apos;s content was dismissed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboardDidDismiss:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboard:didReceiveReward:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called when a content presented in the billboard unlocks a
reward.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboard:(id&lt;USBillboard&gt;)aBillboard didReceiveReward:(id&lt;USReward&gt;)aReward</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard that received a reward.</Abstract>
				</Parameter><Parameter>
					<Name>aReward</Name>
					<Abstract type="html">A reward object that is associated with the contents currently presented in
the billboard.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboard:didReceiveReward:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/USBillboardDelegate/billboard:didReceivePurchase:</TokenIdentifier>
			<Abstract type="html">A delegate method that is called when a content presented in the billboard initiates a
purchase process, usually as a result of user interaction with the presented content.</Abstract>
			<DeclaredIn>USBillboard.h</DeclaredIn>
			
			<Declaration>- (void)billboard:(id&lt;USBillboard&gt;)aBillboard didReceivePurchase:(id&lt;USPurchase&gt;)aPurchase</Declaration>
			<Parameters>
				<Parameter>
					<Name>aBillboard</Name>
					<Abstract type="html">A billboard that received a purchase.</Abstract>
				</Parameter><Parameter>
					<Name>aPurchase</Name>
					<Abstract type="html">A purchase object that is associated with the contents currently presented
in the billboard.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/billboard:didReceivePurchase:</Anchor>
            <NodeRef refid="20"/>
		</Token>
		
        
        
	</File>
</Tokens>